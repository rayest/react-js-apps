@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');

* {
    font-family: monospace;
}

p {
    font-size: 2rem;
    color: purple;
}

body {
    background: #FFFFFF;
    font-size: 22px;
    color: brown;
}

.highlight {
    color: rgb(0, 0, 255);
}

.grey {
    color: #777;
    width: 50vw;
}

/* units */
h1 {
    border: 2px dashed black;
    width: 50%;
    padding: 0.5em;
}

.container {
    width: 50%;
    border: #777 dashed 2px;
    margin: 1em;
    padding: 0.5em;
    outline: 5px solid #913e48;
}

.circle {
    background-color: yellow;
    width: 100px;
    height: 100px;
    border: #777 solid 2px;
    outline: 2px solid red; /* 设置元素的外轮廓。 */
    outline-offset: 0.25rem; /* 设置外轮廓的偏移量。 */
    margin: 3rem;

}

.tpg {
    padding: 10%;
    font-size: 22px;
}

.tpg-p {
    text-decoration: underline;
    text-align: left;
    text-indent: 2em;

    font-family: "EB Garamond", serif;
    font-optical-sizing: auto; /* 设置字体的光学尺寸。 */
    font-weight: 100px;
    font-style: normal;

}

/* css link */

.a-div {
    margin: 1em;
    width: 50%;
}

a {
    text-decoration: none; /* 设置链接的下划线。 */
    cursor: pointer;
    color: blue;
}

a:visited {
    color: lightblue;
}

/* hover：悬停。是一种交互方式，当鼠标悬停在元素上时，元素会发生变化。常见的使用场景是：链接、按钮等。
*/
a:hover {
    color: red;
}

a:active {
    color: green;
}

/* focus：焦点。是一种交互方式，当元素获得焦点时，元素会发生变化。常见的使用场景是：表单元素等。
*/
a:focus {
    color: chartreuse;
}

/* css list style */

.list-style {
    padding: 5% 10%;
    font-size: 20px;
}

ol:nth-child() {
    list-style-type: decimal-leading-zero;  /* 设置有序列表的标记类型。 */
}

ul {
    list-style-type: square;
    color: blue;
    list-style-position: inside; 
    line-height: 2;
    list-style-image: url('https://cdn.freecodecamp.org/testable-projects-fcc/images/relaxing-cat.jpg');
}

ul li:nth-child(even) {
    color: #000;
}

/* markar：标记。是一种布局方式，可以在元素前面添加一个标记。常见的使用场景是：提示、警告等。
*/
ul ::marker {
    color: red;
    font-size: 2rem;
    font-weight: bold;
    font-family: fantasy;
    content: "🐱 only 5$ >> ";

}

/* ｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜｜ */
/* floats 是一种布局方式，可以让元素在页面上左右浮动。 常见的使用场景是文字环绕图片。
 */
.block {
    width: 20vw;
    height: 20vw;
    background-color: #000;
    color: #FFFFFF;
    padding: 1rem;
}

.left {
    float: left;
    margin-right: 1rem;
}

.right {
    float: right;
    margin-left: 1rem;
}

.f {
    margin-left: 20%;
}

.clear {
    clear: both; /* 清除浮动。常见的使用场景是：父元素包含浮动元素时，父元素高度塌陷。 */
}

section {
    background-color: bisque;
    border: 1px solid black;
    padding: 1rem;
    display: flow-root;
}


/* columns ：多列布局。是一种布局方式，可以让元素在页面上分成多列。常见的使用场景是报纸、杂志等。
*/
.columns {
    columns: 4 250px;
    column-rule: 3px solid #333; /* 设置列与列之间的分割线。 */
    column-gap: 3rem; /* 设置列与列之间的间距。 */
}

.columns p {
    margin-top: 0;
}


.columns h2 {
    margin-top: 0px;
    background-color: #333;
    color: #FFFFFF;
    padding: 1rem;
    break-inside: avoid; /* 防止元素被分割。常见的场景是：标题、广告等。 */
    break-before: column; /* 在元素之前插入分栏断点。常见的场景是：标题、广告等。 */
}


.columns .quote {
    margin-top: 2rem;
    font-size: 3rem;
    text-align: center;
    color: #333;
    column-span: all; /* 使元素跨越所有列。常见的是：标题、广告等。 */
}

/* flexbox ：弹性盒子布局。是一种布局方式，可以让元素在页面上按照一定的规则排列。常见的使用场景是导航菜单、图片墙等。
wrap：换行。默认情况下，flexbox 布局下的元素会在一行上排列，如果一行放不下，会自动换行。
nowrap：不换行。如果一行放不下，元素会被挤到下一行。
white-space：空白处理方式。nowrap 会忽略空白，不换行。
*/
.nowrap {
    white-space: nowrap;
}